// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"Car-parking-management-systems/gen/models"
)

// GetParkingByDateReader is a Reader for the GetParkingByDate structure.
type GetParkingByDateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetParkingByDateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetParkingByDateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetParkingByDateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetParkingByDateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetParkingByDateOK creates a GetParkingByDateOK with default headers values
func NewGetParkingByDateOK() *GetParkingByDateOK {
	return &GetParkingByDateOK{}
}

/*
GetParkingByDateOK describes a response with status code 200, with default header values.

Successful response
*/
type GetParkingByDateOK struct {
	Payload []*models.Parking
}

// IsSuccess returns true when this get parking by date o k response has a 2xx status code
func (o *GetParkingByDateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get parking by date o k response has a 3xx status code
func (o *GetParkingByDateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parking by date o k response has a 4xx status code
func (o *GetParkingByDateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get parking by date o k response has a 5xx status code
func (o *GetParkingByDateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get parking by date o k response a status code equal to that given
func (o *GetParkingByDateOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetParkingByDateOK) Error() string {
	return fmt.Sprintf("[GET /parkings/revenue/{exit_time}][%d] getParkingByDateOK  %+v", 200, o.Payload)
}

func (o *GetParkingByDateOK) String() string {
	return fmt.Sprintf("[GET /parkings/revenue/{exit_time}][%d] getParkingByDateOK  %+v", 200, o.Payload)
}

func (o *GetParkingByDateOK) GetPayload() []*models.Parking {
	return o.Payload
}

func (o *GetParkingByDateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetParkingByDateNotFound creates a GetParkingByDateNotFound with default headers values
func NewGetParkingByDateNotFound() *GetParkingByDateNotFound {
	return &GetParkingByDateNotFound{}
}

/*
GetParkingByDateNotFound describes a response with status code 404, with default header values.

Parking not found
*/
type GetParkingByDateNotFound struct {
}

// IsSuccess returns true when this get parking by date not found response has a 2xx status code
func (o *GetParkingByDateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parking by date not found response has a 3xx status code
func (o *GetParkingByDateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parking by date not found response has a 4xx status code
func (o *GetParkingByDateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get parking by date not found response has a 5xx status code
func (o *GetParkingByDateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get parking by date not found response a status code equal to that given
func (o *GetParkingByDateNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *GetParkingByDateNotFound) Error() string {
	return fmt.Sprintf("[GET /parkings/revenue/{exit_time}][%d] getParkingByDateNotFound ", 404)
}

func (o *GetParkingByDateNotFound) String() string {
	return fmt.Sprintf("[GET /parkings/revenue/{exit_time}][%d] getParkingByDateNotFound ", 404)
}

func (o *GetParkingByDateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetParkingByDateInternalServerError creates a GetParkingByDateInternalServerError with default headers values
func NewGetParkingByDateInternalServerError() *GetParkingByDateInternalServerError {
	return &GetParkingByDateInternalServerError{}
}

/*
GetParkingByDateInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetParkingByDateInternalServerError struct {
}

// IsSuccess returns true when this get parking by date internal server error response has a 2xx status code
func (o *GetParkingByDateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get parking by date internal server error response has a 3xx status code
func (o *GetParkingByDateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get parking by date internal server error response has a 4xx status code
func (o *GetParkingByDateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get parking by date internal server error response has a 5xx status code
func (o *GetParkingByDateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get parking by date internal server error response a status code equal to that given
func (o *GetParkingByDateInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetParkingByDateInternalServerError) Error() string {
	return fmt.Sprintf("[GET /parkings/revenue/{exit_time}][%d] getParkingByDateInternalServerError ", 500)
}

func (o *GetParkingByDateInternalServerError) String() string {
	return fmt.Sprintf("[GET /parkings/revenue/{exit_time}][%d] getParkingByDateInternalServerError ", 500)
}

func (o *GetParkingByDateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

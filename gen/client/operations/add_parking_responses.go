// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"Car-parking-management-systems/gen/models"
)

// AddParkingReader is a Reader for the AddParking structure.
type AddParkingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddParkingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddParkingCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddParkingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddParkingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddParkingCreated creates a AddParkingCreated with default headers values
func NewAddParkingCreated() *AddParkingCreated {
	return &AddParkingCreated{}
}

/*
AddParkingCreated describes a response with status code 201, with default header values.

Parking added or updated
*/
type AddParkingCreated struct {
	Payload *models.Parking
}

// IsSuccess returns true when this add parking created response has a 2xx status code
func (o *AddParkingCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add parking created response has a 3xx status code
func (o *AddParkingCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add parking created response has a 4xx status code
func (o *AddParkingCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add parking created response has a 5xx status code
func (o *AddParkingCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add parking created response a status code equal to that given
func (o *AddParkingCreated) IsCode(code int) bool {
	return code == 201
}

func (o *AddParkingCreated) Error() string {
	return fmt.Sprintf("[POST /parkings][%d] addParkingCreated  %+v", 201, o.Payload)
}

func (o *AddParkingCreated) String() string {
	return fmt.Sprintf("[POST /parkings][%d] addParkingCreated  %+v", 201, o.Payload)
}

func (o *AddParkingCreated) GetPayload() *models.Parking {
	return o.Payload
}

func (o *AddParkingCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Parking)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddParkingBadRequest creates a AddParkingBadRequest with default headers values
func NewAddParkingBadRequest() *AddParkingBadRequest {
	return &AddParkingBadRequest{}
}

/*
AddParkingBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type AddParkingBadRequest struct {
}

// IsSuccess returns true when this add parking bad request response has a 2xx status code
func (o *AddParkingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add parking bad request response has a 3xx status code
func (o *AddParkingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add parking bad request response has a 4xx status code
func (o *AddParkingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add parking bad request response has a 5xx status code
func (o *AddParkingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add parking bad request response a status code equal to that given
func (o *AddParkingBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *AddParkingBadRequest) Error() string {
	return fmt.Sprintf("[POST /parkings][%d] addParkingBadRequest ", 400)
}

func (o *AddParkingBadRequest) String() string {
	return fmt.Sprintf("[POST /parkings][%d] addParkingBadRequest ", 400)
}

func (o *AddParkingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddParkingInternalServerError creates a AddParkingInternalServerError with default headers values
func NewAddParkingInternalServerError() *AddParkingInternalServerError {
	return &AddParkingInternalServerError{}
}

/*
AddParkingInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type AddParkingInternalServerError struct {
}

// IsSuccess returns true when this add parking internal server error response has a 2xx status code
func (o *AddParkingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add parking internal server error response has a 3xx status code
func (o *AddParkingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add parking internal server error response has a 4xx status code
func (o *AddParkingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add parking internal server error response has a 5xx status code
func (o *AddParkingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add parking internal server error response a status code equal to that given
func (o *AddParkingInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *AddParkingInternalServerError) Error() string {
	return fmt.Sprintf("[POST /parkings][%d] addParkingInternalServerError ", 500)
}

func (o *AddParkingInternalServerError) String() string {
	return fmt.Sprintf("[POST /parkings][%d] addParkingInternalServerError ", 500)
}

func (o *AddParkingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

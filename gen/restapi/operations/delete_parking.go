// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteParkingHandlerFunc turns a function with the right signature into a delete parking handler
type DeleteParkingHandlerFunc func(DeleteParkingParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteParkingHandlerFunc) Handle(params DeleteParkingParams) middleware.Responder {
	return fn(params)
}

// DeleteParkingHandler interface for that can handle valid delete parking params
type DeleteParkingHandler interface {
	Handle(DeleteParkingParams) middleware.Responder
}

// NewDeleteParking creates a new http.Handler for the delete parking operation
func NewDeleteParking(ctx *middleware.Context, handler DeleteParkingHandler) *DeleteParking {
	return &DeleteParking{Context: ctx, Handler: handler}
}

/*
	DeleteParking swagger:route DELETE /parkings/{id} deleteParking

DeleteParking delete parking API
*/
type DeleteParking struct {
	Context *middleware.Context
	Handler DeleteParkingHandler
}

func (o *DeleteParking) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteParkingParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
